import * as Phaser from "phaser";
import { GameScene } from "./GameScene";

// TypeScript„Åßwindow.game„Çí‰ΩøÁî®„Åô„Çã„Åü„ÇÅ„ÅÆÂûãÂÆöÁæ©
declare global {
  interface Window {
    game: Phaser.Game;
  }
}

/**
 * Phaser„Ç≤„Éº„É†„ÅÆË®≠ÂÆö
 */
const config: Phaser.Types.Core.GameConfig = {
  type: Phaser.AUTO,
  parent: "game-container",
  width: 360,
  height: 640,
  backgroundColor: "#222222",
  scale: {
    mode: Phaser.Scale.FIT,
    autoCenter: Phaser.Scale.CENTER_BOTH,
    width: 360,
    height: 640,
  },
  scene: [GameScene],
  physics: {
    default: "arcade",
    arcade: {
      debug: false,
    },
  },
  // „Ç™„Éº„Éá„Ç£„Ç™„ÅÆË≠¶Âëä„ÇíÊäëÂà∂„Åô„Çã„Ç™„Éó„Ç∑„Éß„É≥
  audio: {
    disableWebAudio: false,
    noAudio: false,
  },
  // „Éá„Éê„ÉÉ„Ç∞Áî®„ÅÆ„Ç≥„Éº„É´„Éê„ÉÉ„ÇØ
  callbacks: {
    preBoot: () => {
      console.log("üéÆ Phaser: Pre-boot phase");
    },
    postBoot: () => {
      console.log("üéÆ Phaser: Post-boot phase - Game is ready!");
    },
  },
};

// „Éá„Éê„ÉÉ„Ç∞: Phaser„ÅÆÂ≠òÂú®Á¢∫Ë™ç
console.log("üì¶ Phaser version:", Phaser.VERSION);
console.log("üì¶ Creating game instance...");

// „Ç≤„Éº„É†„ÅÆ‰ΩúÊàê„Å®ÈñãÂßã
const game = new Phaser.Game(config);

// ÈáçË¶Å: „Ç∞„É≠„Éº„Éê„É´Â§âÊï∞„Å®„Åó„Å¶ÂÖ¨ÈñãÔºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
window.game = game;

// „Éá„Éê„ÉÉ„Ç∞: „Ç≤„Éº„É†„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅÆÁ¢∫Ë™ç
console.log("‚úÖ Game instance created:", !!game);
console.log("‚úÖ Window.game assigned:", !!window.game);

// „Ç∑„Éº„É≥„ÅÆÂàùÊúüÂåñ„ÇíÁõ£Ë¶ñ
game.events.once("ready", () => {
  console.log("üéÆ Game is ready!");
  console.log(
    "üìã Active scenes:",
    game.scene.getScenes(true).map((s) => s.scene.key)
  );

  // GameScene„ÅåÊ≠£„Åó„ÅèÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
  const gameScene = game.scene.getScene("GameScene");
  console.log("üé¨ GameScene found:", !!gameScene);
});

// „É¢„Éê„Ç§„É´„Éá„Éê„Ç§„Çπ„Åß„ÅÆ„Çø„ÉÉ„ÉÅÊìç‰Ωú„ÇíÊúâÂäπÂåñ
if (game.device.input.touch) {
  game.input.addPointer(2);
  console.log("üì± Touch input enabled");
}

// „Ç¶„Ç£„É≥„Éâ„Ç¶„ÅÆ„É™„Çµ„Ç§„Ç∫„Å´ÂØæÂøú
window.addEventListener("resize", () => {
  game.scale.refresh();
});

// „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
window.addEventListener("error", (event) => {
  console.error("‚ùå Global error:", event.error);
});

// „Éö„Éº„Ç∏Èõ¢ËÑ±ÊôÇ„ÅÆ„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
window.addEventListener("beforeunload", () => {
  if (game) {
    game.destroy(true);
  }
});

// „Éá„Éê„ÉÉ„Ç∞Áî®: 5ÁßíÂæå„Å´Áä∂ÊÖã„ÇíÁ¢∫Ë™ç
setTimeout(() => {
  console.log("üîç === Game Status Check (5s) ===");
  console.log("Game exists:", !!window.game);
  console.log("Scene manager:", !!window.game?.scene);
  console.log("GameScene active:", window.game?.scene?.isActive("GameScene"));
  console.log("GameScene visible:", window.game?.scene?.isVisible("GameScene"));
  console.log("=================================");
}, 5000);
